/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jaratfoglalo;

import static jaratfoglalo.JaratFoglalo.currentId;
import static jaratfoglalo.JaratFoglalo.currentUser;
import static jaratfoglalo.JaratFoglalo.numberOfShips;
import static jaratfoglalo.JaratFoglalo.fLoad;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Bakcsányi Dominik
 */
public class JaratRoutes extends javax.swing.JFrame {

    protected boolean confirmed = false;
    protected int wal;
    /**
     * Creates new form JaratRoutes
     */
    protected static int selId = 1;

    public JaratRoutes() {
        initComponents();
        lista();
        myWallet();
        jSpinner1.setValue(1);
        jSpinner2.setValue(1);
        jSpinner3.setValue(1);
        jLabel1.setText("User: " + currentUser.replaceAll("[╗]", "'"));
        jLabel2.setText("My wallet: " + String.valueOf(wal));
        jButton1.setOpaque(false);
        jButton1.setContentAreaFilled(false);
        jButton1.setBorderPainted(false);

        jButton2.setOpaque(false);
        jButton2.setContentAreaFilled(false);
        jButton2.setBorderPainted(false);

        jButton3.setOpaque(false);
        jButton3.setContentAreaFilled(false);
        jButton3.setBorderPainted(false);

        jButton4.setOpaque(false);
        jButton4.setContentAreaFilled(false);
        jButton4.setBorderPainted(false);

        jButton5.setOpaque(false);
        jButton5.setContentAreaFilled(false);
        jButton5.setBorderPainted(false);

        closeB.setOpaque(false);
        closeB.setContentAreaFilled(false);
        closeB.setBorderPainted(false);

        ticB.setOpaque(false);
        ticB.setContentAreaFilled(false);
        ticB.setBorderPainted(false);

        wallB.setOpaque(false);
        wallB.setContentAreaFilled(false);
        wallB.setBorderPainted(false);

        jTable1.getColumnModel().getColumn(0).setMinWidth(0);
        jTable1.getColumnModel().getColumn(0).setMaxWidth(0);
        jTable1.getColumnModel().getColumn(0).setWidth(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        closeB = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        wallB = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        ticB = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jSpinner2 = new javax.swing.JSpinner();
        jSpinner3 = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(212, 223, 208));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel3.setText("From:");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 70, -1, -1));

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });
        jPanel2.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 70, 123, -1));

        jLabel4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel4.setText("To:");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 70, -1, -1));

        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField2KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField2KeyReleased(evt);
            }
        });
        jPanel2.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 70, 130, -1));

        jTable1.setBackground(new java.awt.Color(212, 223, 208));
        jTable1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Departure", "Destination", "Launch Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTable1.setGridColor(new java.awt.Color(96, 115, 101));
        jTable1.setName(""); // NOI18N
        jTable1.setSelectionBackground(new java.awt.Color(0, 204, 204));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
        }

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 140, 375, 440));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Available seats:");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 340, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("Available seats:");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 410, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Economy seat:");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 210, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Business seat:");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 290, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("First Class:");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 370, -1, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Available seats:");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 260, -1, -1));

        jPanel1.setBackground(new java.awt.Color(96, 115, 101));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("jLabel1");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("jLabel2");

        jPanel9.setBackground(new java.awt.Color(51, 114, 135));

        closeB.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        closeB.setForeground(new java.awt.Color(255, 255, 255));
        closeB.setText("X");
        closeB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(closeB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(closeB, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(49, 49, 49)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 892, Short.MAX_VALUE)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1110, 41));

        jPanel3.setBackground(new java.awt.Color(51, 114, 135));

        jButton1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 100, 120, 30));

        jPanel4.setBackground(new java.awt.Color(51, 114, 135));

        jButton2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Buy");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jButton2)
                .addGap(0, 7, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 240, -1, 30));

        jPanel5.setBackground(new java.awt.Color(51, 114, 135));

        jButton3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Buy");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jButton3)
                .addGap(0, 7, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 320, 180, 30));

        jPanel6.setBackground(new java.awt.Color(51, 114, 135));

        jButton4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Buy");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jButton4)
                .addGap(0, 7, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 400, 180, 30));

        jPanel7.setBackground(new java.awt.Color(51, 114, 135));

        jButton5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Return");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 540, 110, 40));

        jPanel13.setBackground(new java.awt.Color(180, 224, 166));

        jPanel10.setBackground(new java.awt.Color(51, 114, 135));

        wallB.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        wallB.setForeground(new java.awt.Color(255, 255, 255));
        wallB.setText("My wallet");
        wallB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wallBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(wallB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(wallB, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
        );

        jPanel11.setBackground(new java.awt.Color(51, 114, 135));

        ticB.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        ticB.setForeground(new java.awt.Color(255, 255, 255));
        ticB.setText("My Tickets");
        ticB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ticBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ticB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ticB, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
        );

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jaratfoglalo/Empire_insignia_simple_small.jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addGap(23, 23, 23))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 217, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addGap(34, 34, 34))
        );

        jPanel2.add(jPanel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 260, 560));
        jPanel2.add(jSpinner1, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 240, 50, -1));
        jPanel2.add(jSpinner2, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 320, 50, -1));
        jPanel2.add(jSpinner3, new org.netbeans.lib.awtextra.AbsoluteConstraints(669, 400, 50, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        try {
            jTable1.setModel(new DefaultTableModel(null, new String[]{"id", "Departure", "Destination", "Launch Date"}));

            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/jaratok", "root", "");

            String dep = jTextField1.getText();
            String arri = jTextField2.getText();
            Statement stm = con.createStatement();
            String sql = "SELECT `id`,`fromS`,`toS`,`date` FROM `routes` WHERE `fromS` LIKE '%" + dep + "%' AND `toS` LIKE '%" + arri + "%'";
            ResultSet rs = stm.executeQuery(sql);
            Object rowData[] = new Object[4];
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            String depa = "";
            String arr = "";
            while (rs.next()) {
                depa = rs.getString("fromS");
                depa = depa.replaceAll("[╗]", "'");

                arr = rs.getString("toS");
                arr = arr.replaceAll("[╗]", "'");

                rowData[0] = rs.getString("id");
                rowData[1] = depa;
                rowData[2] = arr;
                rowData[3] = rs.getString("date");

                model.addRow(rowData);

            }
            con.close();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(JaratLogin.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(JaratLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        jTable1.getColumnModel().getColumn(0).setMinWidth(0);
        jTable1.getColumnModel().getColumn(0).setMaxWidth(0);
        jTable1.getColumnModel().getColumn(0).setWidth(0);
    }//GEN-LAST:event_jButton1ActionPerformed
    protected int ePrice;
    protected int bPrice;
    protected int fPrice;
    protected String selel;

    protected String dp;
    protected String ds;
    protected String sp;
    protected String dt;
    protected String type;

    protected int eSeat = 0;
    protected int bSeat = 0;
    protected int fSeat = 0;

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

        int column = 0;
        int row = jTable1.getSelectedRow();
        selel = jTable1.getModel().getValueAt(row, column).toString();

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/jaratok", "root", "");

            Statement stm = con.createStatement();
            ResultSet rs = stm.executeQuery("SELECT * FROM `routes` WHERE id='" + selel + "';");
            int dis = 0;

            while (rs.next()) {
                eSeat = rs.getInt("economy");
                bSeat = rs.getInt("business");
                fSeat = rs.getInt("first");
                dis = rs.getInt("distance");

                dp = rs.getString("fromS");
                ds = rs.getString("toS");
                sp = rs.getString("ship");
                dt = rs.getString("date");

                // ---
            }
            ePrice = 300 * dis;
            bPrice = 500 * dis;
            fPrice = 800 * dis;

            jButton2.setText("Buy for " + String.valueOf(ePrice) + " CR/seat");
            jButton3.setText("Buy for " + String.valueOf(bPrice) + " CR/seat");
            jButton4.setText("Buy for " + String.valueOf(fPrice) + " CR/seat");

            jLabel8.setText("Available seats: " + String.valueOf(eSeat));
            jLabel9.setText("Available seats: " + String.valueOf(bSeat));
            jLabel10.setText("Available seats: " + String.valueOf(fSeat));
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(JaratLogin.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(JaratLogin.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        jaratHome jr = new jaratHome();
        jr.setLocationRelativeTo(null);
        jr.show();
        dispose();
    }//GEN-LAST:event_jButton5ActionPerformed
    protected String selectedClass = "none";

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int fAmount = (Integer) jSpinner1.getValue();
        fLoad = fAmount;
        if (fAmount < 1) {
            JOptionPane.showMessageDialog(this, "Please enter a number above 0");
        } else {
            int input = JOptionPane.showConfirmDialog(null, "Do you confirm your purchase for " + fAmount * ePrice + "?", "Confirmation",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

            if (input == 0) {
                setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));

                JaratProcessing jp = new JaratProcessing();
                jp.setLocationRelativeTo(null);
                jp.show();

                selectedClass = "economy";

                type = "Economy";
                if (wal < fAmount * ePrice) {
                    JOptionPane.showMessageDialog(this, "Unsuficient credits!");
                } else if (eSeat < fAmount) {
                    JOptionPane.showMessageDialog(this, "No available seats!");
                } else {
                    eSeat -= fAmount;
                    jLabel8.setText("Available seats: " + String.valueOf(eSeat));
                    try {
                        Class.forName("com.mysql.cj.jdbc.Driver");
                        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/jaratok", "root", "");

                        Statement stm = con.createStatement();
                        String sql = "UPDATE `users` SET `wallet` = wallet-'" + fAmount * ePrice + "' WHERE `users`.`id` = " + currentId + ";";

                        stm.executeUpdate(sql);
                        JOptionPane.showMessageDialog(this, "Successfull purchase!");

                        //INSERT INTO `users` (`id`, `user`, `pass`, `email`) VALUES (NULL, 'admin', 'admin', 'valami@email.hu');
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(JaratLogin.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (SQLException ex) {
                        Logger.getLogger(JaratLogin.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    try {
                        Class.forName("com.mysql.cj.jdbc.Driver");
                        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/jaratok", "root", "");

                        Statement stm = con.createStatement();
                        String sql = "UPDATE `routes` SET `economy` = economy-'" + fAmount + "' WHERE `routes`.`id` = " + selel + ";";

                        stm.executeUpdate(sql);

                        //INSERT INTO `users` (`id`, `user`, `pass`, `email`) VALUES (NULL, 'admin', 'admin', 'valami@email.hu');
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(JaratLogin.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (SQLException ex) {
                        Logger.getLogger(JaratLogin.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    int counter = 0;
                    while (counter != fAmount) {

                        try {
                            counter++;
                            System.err.print(" ▓ ");
                            if (counter % 10 == 0) {
                                System.out.print("\n");
                            }
                            Thread.sleep(1000);

                            try {
                                Class.forName("com.mysql.cj.jdbc.Driver");
                                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/jaratok", "root", "");

                                Statement stm = con.createStatement();
                                String sql = "INSERT INTO `tickets` (`ticketId`,`user_id`, `departure`, `destination`, `ship`, `date`, `seat`) VALUES (NULL,'" + currentId + "', '" + dp + "', '" + ds + "', '" + sp + "' , '" + dt + "', '" + type + "')";

                                stm.executeUpdate(sql);

                                //INSERT INTO `users` (`id`, `user`, `pass`, `email`) VALUES (NULL, 'admin', 'admin', 'valami@email.hu');
                            } catch (ClassNotFoundException ex) {
                                Logger.getLogger(JaratLogin.class.getName()).log(Level.SEVERE, null, ex);
                            } catch (SQLException ex) {
                                Logger.getLogger(JaratLogin.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        } catch (InterruptedException ex) {
                            Logger.getLogger(JaratRoutes.class.getName()).log(Level.SEVERE, null, ex);
                        }

                    }

                }
                myWallet();

                jLabel2.setText("My wallet: " + String.valueOf(wal));
                jp.dispose();
                setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
                System.out.println("");
                for (int i = 0; i < fAmount; i++) {
                    System.out.print("___");
                }
                System.out.println("");
            } else {
                JOptionPane.showMessageDialog(this, "You have canceled this purchase");
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int fAmount = (Integer) jSpinner2.getValue();
        fLoad = fAmount;
        if (fAmount < 1) {
            JOptionPane.showMessageDialog(this, "Please enter a number above 0");
        } else {
            int input = JOptionPane.showConfirmDialog(null, "Do you confirm your purchase for " + fAmount * bPrice + "?", "Confirmation",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

            if (input == 0) {
                setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
                JaratProcessing jp = new JaratProcessing();
                jp.setLocationRelativeTo(null);
                jp.show();

                type = "Business";
                if (wal < fAmount * bPrice) {
                    JOptionPane.showMessageDialog(this, "Unsuficient credits!");
                } else if (bSeat < fAmount) {
                    JOptionPane.showMessageDialog(this, "No available seats!");
                } else {
                    bSeat -= fAmount;
                    jLabel9.setText("Available seats: " + String.valueOf(bSeat));
                    try {
                        Class.forName("com.mysql.cj.jdbc.Driver");
                        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/jaratok", "root", "");

                        Statement stm = con.createStatement();
                        String sql = "UPDATE `users` SET `wallet` = wallet-'" + fAmount * bPrice + "' WHERE `users`.`id` = " + currentId + ";";

                        stm.executeUpdate(sql);
                        JOptionPane.showMessageDialog(this, "Successfull purchase!");

                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(JaratLogin.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (SQLException ex) {
                        Logger.getLogger(JaratLogin.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    try {
                        Class.forName("com.mysql.cj.jdbc.Driver");
                        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/jaratok", "root", "");

                        Statement stm = con.createStatement();
                        String sql = "UPDATE `routes` SET `business` = business-'" + fAmount + "' WHERE `routes`.`id` = " + selel + ";";

                        stm.executeUpdate(sql);

                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(JaratLogin.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (SQLException ex) {
                        Logger.getLogger(JaratLogin.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    int counter = 0;
                    while (counter != fAmount) {

                        try {
                            counter++;
                            System.err.print(" ▓ ");
                            if (counter % 10 == 0) {
                                System.out.print("\n");
                            }
                            Thread.sleep(1000);

                            try {
                                Class.forName("com.mysql.cj.jdbc.Driver");
                                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/jaratok", "root", "");

                                Statement stm = con.createStatement();
                                String sql = "INSERT INTO `tickets` (`ticketId`,`user_id`, `departure`, `destination`, `ship`, `date`, `seat`) VALUES (NULL,'" + currentId + "', '" + dp + "', '" + ds + "', '" + sp + "' , '" + dt + "', '" + type + "')";

                                stm.executeUpdate(sql);

                            } catch (ClassNotFoundException ex) {
                                Logger.getLogger(JaratLogin.class.getName()).log(Level.SEVERE, null, ex);
                            } catch (SQLException ex) {
                                Logger.getLogger(JaratLogin.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        } catch (InterruptedException ex) {
                            Logger.getLogger(JaratRoutes.class.getName()).log(Level.SEVERE, null, ex);
                        }

                    }

                }
                myWallet();

                jLabel2.setText("My wallet: " + String.valueOf(wal));
                jp.dispose();
                setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
                System.out.println("");
                for (int i = 0; i < fAmount; i++) {
                    System.out.print("___");
                }
                System.out.println("");
            } else {
                JOptionPane.showMessageDialog(this, "You have canceled this purchase");
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int fAmount = (Integer) jSpinner3.getValue();
        fLoad = fAmount;
        if (fAmount < 1) {
            JOptionPane.showMessageDialog(this, "Please enter a number above 0");
        } else {
            int input = JOptionPane.showConfirmDialog(null, "Do you confirm your purchase for " + fAmount * fPrice + "?", "Confirmation",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

            if (input == 0) {
                setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
                JaratProcessing jp = new JaratProcessing();
                jp.setLocationRelativeTo(null);
                jp.show();

                type = "First Class";
                if (wal < fAmount * fPrice) {
                    JOptionPane.showMessageDialog(this, "Unsuficient credits!");
                } else if (fSeat < fAmount) {
                    JOptionPane.showMessageDialog(this, "No available seats!");
                } else {
                    fSeat -= fAmount;
                    jLabel10.setText("Available seats: " + String.valueOf(fSeat));
                    try {
                        Class.forName("com.mysql.cj.jdbc.Driver");
                        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/jaratok", "root", "");

                        Statement stm = con.createStatement();
                        String sql = "UPDATE `users` SET `wallet` = wallet-'" + fAmount * fPrice + "' WHERE `users`.`id` = " + currentId + ";";

                        stm.executeUpdate(sql);
                        JOptionPane.showMessageDialog(this, "Successfull purchase!");

                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(JaratLogin.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (SQLException ex) {
                        Logger.getLogger(JaratLogin.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    try {
                        Class.forName("com.mysql.cj.jdbc.Driver");
                        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/jaratok", "root", "");

                        Statement stm = con.createStatement();
                        String sql = "UPDATE `routes` SET `first` = first-'" + fAmount + "' WHERE `routes`.`id` = " + selel + ";";

                        stm.executeUpdate(sql);

                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(JaratLogin.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (SQLException ex) {
                        Logger.getLogger(JaratLogin.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    int counter = 0;
                    while (counter != fAmount) {
                        try {
                            counter++;
                            System.err.print(" ▓ ");
                            if (counter % 10 == 0) {
                                System.out.print("\n");
                            }
                            Thread.sleep(1000);

                            try {
                                Class.forName("com.mysql.cj.jdbc.Driver");
                                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/jaratok", "root", "");

                                Statement stm = con.createStatement();
                                String sql = "INSERT INTO `tickets` (`ticketId`,`user_id`, `departure`, `destination`, `ship`, `date`, `seat`) VALUES (NULL,'" + currentId + "', '" + dp + "', '" + ds + "', '" + sp + "' , '" + dt + "', '" + type + "')";

                                stm.executeUpdate(sql);

                            } catch (ClassNotFoundException ex) {
                                Logger.getLogger(JaratLogin.class.getName()).log(Level.SEVERE, null, ex);
                            } catch (SQLException ex) {
                                Logger.getLogger(JaratLogin.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        } catch (InterruptedException ex) {
                            Logger.getLogger(JaratRoutes.class.getName()).log(Level.SEVERE, null, ex);
                        }

                    }

                }
                myWallet();

                jLabel2.setText("My wallet: " + String.valueOf(wal));
                jp.dispose();
                setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
                System.out.println("");
                for (int i = 0; i < fAmount; i++) {
                    System.out.print("___");
                }
                System.out.println("");
            } else {
                JOptionPane.showMessageDialog(this, "You have canceled this purchase");
            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void closeBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBActionPerformed
        dispose();
    }//GEN-LAST:event_closeBActionPerformed

    private void wallBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wallBActionPerformed
        JaratWallet jw = new JaratWallet();
        jw.setLocationRelativeTo(null);
        jw.show();
        dispose();

    }//GEN-LAST:event_wallBActionPerformed

    private void ticBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ticBActionPerformed
        JaratMyTickets jmt = new JaratMyTickets();
        jmt.setLocationRelativeTo(null);
        jmt.show();
        dispose();
    }//GEN-LAST:event_ticBActionPerformed

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
         
    }//GEN-LAST:event_jTextField1KeyPressed

    private void jTextField2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyPressed
        
    }//GEN-LAST:event_jTextField2KeyPressed

    private void jTextField2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyReleased
        
        try {
            jTable1.setModel(new DefaultTableModel(null, new String[]{"id", "Departure", "Destination", "Launch Date"}));

            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/jaratok", "root", "");

            String dep = jTextField1.getText();
            String arri = jTextField2.getText();
            Statement stm = con.createStatement();
            String sql = "SELECT `id`,`fromS`,`toS`,`date` FROM `routes` WHERE `fromS` LIKE '%" + dep + "%' AND `toS` LIKE '%" + arri + "%'";
            ResultSet rs = stm.executeQuery(sql);
            Object rowData[] = new Object[4];
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            String depa = "";
            String arr = "";
            while (rs.next()) {
                depa = rs.getString("fromS");
                depa = depa.replaceAll("[╗]", "'");

                arr = rs.getString("toS");
                arr = arr.replaceAll("[╗]", "'");

                rowData[0] = rs.getString("id");
                rowData[1] = depa;
                rowData[2] = arr;
                rowData[3] = rs.getString("date");

                model.addRow(rowData);

            }
            con.close();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(JaratLogin.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(JaratLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        jTable1.getColumnModel().getColumn(0).setMinWidth(0);
        jTable1.getColumnModel().getColumn(0).setMaxWidth(0);
        jTable1.getColumnModel().getColumn(0).setWidth(0);
    }//GEN-LAST:event_jTextField2KeyReleased

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        
       
        try {
            jTable1.setModel(new DefaultTableModel(null, new String[]{"id", "Departure", "Destination", "Launch Date"}));

            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/jaratok", "root", "");

            String dep = jTextField1.getText();
            String arri = jTextField2.getText();
            Statement stm = con.createStatement();
            String sql = "SELECT `id`,`fromS`,`toS`,`date` FROM `routes` WHERE `fromS` LIKE '%" + dep + "%' AND `toS` LIKE '%" + arri + "%'";
            ResultSet rs = stm.executeQuery(sql);
            Object rowData[] = new Object[4];
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            String depa = "";
            String arr = "";
            while (rs.next()) {
                depa = rs.getString("fromS");
                depa = depa.replaceAll("[╗]", "'");

                arr = rs.getString("toS");
                arr = arr.replaceAll("[╗]", "'");

                rowData[0] = rs.getString("id");
                rowData[1] = depa;
                rowData[2] = arr;
                rowData[3] = rs.getString("date");

                model.addRow(rowData);

            }
            con.close();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(JaratLogin.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(JaratLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        jTable1.getColumnModel().getColumn(0).setMinWidth(0);
        jTable1.getColumnModel().getColumn(0).setMaxWidth(0);
        jTable1.getColumnModel().getColumn(0).setWidth(0);
    }//GEN-LAST:event_jTextField1KeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JaratRoutes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JaratRoutes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JaratRoutes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JaratRoutes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JaratRoutes().setVisible(true);
            }
        });
    }

    private void lista() {

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/jaratok", "root", "");

            Statement stm = con.createStatement();
            String sql = "SELECT `id`,`fromS`,`toS`,`date` FROM `routes`";
            ResultSet rs = stm.executeQuery(sql);
            Object rowData[] = new Object[4];
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            String dep = "";
            String arr = "";
            while (rs.next()) {
                dep = rs.getString("fromS");
                dep = dep.replaceAll("[╗]", "'");

                arr = rs.getString("toS");
                arr = arr.replaceAll("[╗]", "'");

                rowData[0] = rs.getString("id");
                rowData[1] = dep;
                rowData[2] = arr;
                rowData[3] = rs.getString("date");

                model.addRow(rowData);

            }
            con.close();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(JaratLogin.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(JaratLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    protected void myWallet() {
        try {

            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/jaratok", "root", "");

            Statement stm = con.createStatement();
            String sql = "SELECT `wallet` FROM users WHERE `id` = " + currentId + "";
            ResultSet rs = stm.executeQuery(sql);

            while (rs.next()) {
                wal = rs.getInt("wallet");

            }
            jLabel2.setText(String.valueOf("My wallet: " + wal));

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(JaratLogin.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(JaratLogin.class.getName()).log(Level.SEVERE, null, ex);

        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeB;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JSpinner jSpinner3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JButton ticB;
    private javax.swing.JButton wallB;
    // End of variables declaration//GEN-END:variables
}
